"""
1. 引进matplotlib
2. 生成随机数组
3. 绘制数组散点图
4. 实现k临近算法
5. 欧拉距离
6. 数据排序argot()
7. 找出前n个点
8. most_common
"""
import numpy as np
import matplotlib.pyplot as plt

# pd.scatter_matrix()参数
# pd.scatter_matrix(frame,alpha = 0.5,figsize =(10,8) ,grid = False,diagonal = 'hist',marker = 'o',range_padding = 0.01,**kwds)
#         frame：数据需要举阵形式
#         diagonal： { 'hist','kde'}必须在这两个中选一个， 'kde' 就是画密度图且核为kde,若diagonal='hist',则为直方图
#         range_padding： 图像在x轴，y轴原点附近留白，值越大，留白越多。

if __name__ == '__main__':
    arr = np.random.random([20, 2])
    arr2 = [[0.37645366, 0.14941623],
            [0.91395606, 0.03958414],
            [0.69212248, 0.38082694],
            [0.70742287, 0.39832427],
            [0.36261735, 0.60113933],
            [0.41389138, 0.58356442],
            [0.74629759, 0.05624303],
            [0.94429696, 0.985331],
            [0.73496505, 0.09795186],
            [0.40591813, 0.02935503],
            [0.03797164, 0.81708015],
            [0.14303413, 0.03751063],
            [0.61268751, 0.54400878],
            [0.70264272, 0.82963233],
            [0.56608281, 0.33696347],
            [0.43253144, 0.96243548],
            [0.61074814, 0.99191764],
            [0.21640587, 0.93338808],
            [0.19808091, 0.34616549],
            [0.71636648, 0.120403]]

    plt.plot(arr, '.b', arr2, '.r')
    # plt.matshow(mat, cmap=plt.cm.Blues)
    plt.show()
    print('数组：', arr)
